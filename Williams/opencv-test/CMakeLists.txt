cmake_minimum_required(VERSION 3.5)
project(opencv-test)
IF (WIN32)
    set(OPENCV_DIR "C:/Program Files (x86)/opencv/build/x64/vc15")
ENDIF ()
find_package(OpenCV REQUIRED)
#find_package(OpenMP)
#set (CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
#set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
#set (CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}")
set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra")
set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -O3")
add_executable(armor-detection armor-detection.cpp)
target_link_libraries(armor-detection ${OpenCV_LIBS})
add_executable(opencv-test1 opencv-test1.cpp)
target_link_libraries(opencv-test1 ${OpenCV_LIBS})
add_executable(opencv-test2 opencv-test2.cpp)
target_link_libraries(opencv-test2 ${OpenCV_LIBS})
add_executable(opencv-test3 opencv-test3.cpp)
target_link_libraries(opencv-test3 ${OpenCV_LIBS})
add_executable(opencv-test4 opencv-test4.cpp)
target_link_libraries(opencv-test4 ${OpenCV_LIBS})
add_executable(opencv-test5 opencv-test5.cpp)
target_link_libraries(opencv-test5 ${OpenCV_LIBS})
add_executable(opencv-test6 opencv-test6.cpp)
target_link_libraries(opencv-test6 ${OpenCV_LIBS})
add_executable(camera-test camera-test.cpp)
target_link_libraries(camera-test ${OpenCV_LIBS})
add_executable(camera-calibration-test camera-calibration-test.cpp)
target_link_libraries(camera-calibration-test ${OpenCV_LIBS})
add_executable(hsv-test hsv-test.cpp)
target_link_libraries(hsv-test ${OpenCV_LIBS})
add_executable(settings-test settings-test.cpp)
target_link_libraries(settings-test ${OpenCV_LIBS})
add_executable(histogram-equalization histogram-equalization.cpp)
target_link_libraries(histogram-equalization ${OpenCV_LIBS})